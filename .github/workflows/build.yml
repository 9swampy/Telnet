name: Build, Publish, Tag

on:
  push:
    branches: [ "master", "release/**", "GitTag" ]
  pull_request:
    branches: [ "master", "develop" ]
  workflow_dispatch:

jobs:

  build:
  
    runs-on: windows-latest  

    env:
      Solution_Name: PrimS.Telnet.sln

    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Install .NET Core
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: 6.0.x

    - name: Setup MSBuild.exe
      uses: microsoft/setup-msbuild@v1.0.2

    - name: Install nuget
      run: Invoke-WebRequest https://dist.nuget.org/win-x86-commandline/latest/nuget.exe -OutFile Nuget.exe

    - name: Nuget restore
      run: Nuget.exe restore

    - name: Build Debug
      run: msbuild $env:Solution_Name /p:Configuration=Debug /p:Platform="Any CPU"

    - name: Setup VSTest.console.exe
      uses: darenm/Setup-VSTest@v1
      
    - name: Telnet.CiTests
      run: vstest.console.exe **\bin\**\PrimS.Telnet.CiTests.dll

    - name: Telnet.Sync.CiTests
      run: vstest.console.exe **\bin\**\PrimS.Telnet.Sync.CiTests.dll

    - name: Telnet.NetStandard.CiTests
      run: vstest.console.exe **\bin\**\PrimS.Telnet.NetStandard.CiTests.dll

    - name: GitVersion
      run: dotnet tool install --global GitVersion.Tool

    - name: Run GitVersion
      run: |
        $str = dotnet-gitversion /updateprojectfiles | out-string
        $json = ConvertFrom-Json $str
        $semVer = $json.SemVer
        $fullSemVer = $json.FullSemVer
        $nuGetVersionV2 = $json.NuGetVersionV2

        Write-Host $semVer
        Write-Host $fullSemVer
        Write-Host $nuGetVersionV2

        echo "FullSemVer=$fullSemVer" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf8 -Append
        echo "SemVer=$semVer" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf8 -Append
        echo "NuGetVersionV2=$nuGetVersionV2" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf8 -Append

    - name: Build Release
      run: msbuild $env:Solution_Name /p:Configuration=Release /p:Platform="Any CPU"

    - name: Nuget pack
      run: nuget pack Telnet.nuspec -Version $Env:NuGetVersionV2

    - name: Publish to GitHub
      run: dotnet nuget push "Telnet.$Env:NuGetVersionV2.nupkg" --api-key ${{ secrets.PUBLISH_TO_GITHUB_PACKAGES }}  --source "https://nuget.pkg.github.com/9swampy/index.json"

    - name: Publish to Nuget
      if: github.ref == 'refs/heads/master'
      run: nuget push "Telnet.$Env:NuGetVersionV2.nupkg" ${{ secrets.NUGET_APIKEY }} -source https://api.nuget.org/v3/index.json
      
    - name: Setup Git User
      uses: fregante/setup-git-user@v1.1.0

    - name: Git tag
      run: |
        git tag v$Env:FullSemVer
        git push origin v$Env:FullSemVer

